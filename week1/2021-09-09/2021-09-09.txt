-Git 과 Github의 차이?
Git : 개발을 진행하며 작성아흔 소스코드가 업데이트 되는 버전을 기록해두고 관리할 수 있는
       소스코드 버전 관리 시스템
Github : Git으로 관리하는 프로젝트를 호스팅하고, 시간과 공간의 제약 없이 협업할 수 있는
            온라인 서비스
즉, Git이 버전 기록을 저장한다면, Github는 그 기록을 다른 사람과 공유 및 협업할 수 있다!
Local에서 작업한 내용은 Git에, 그 기록을 Github에 올린다!

Repository : Git과 동기화를 해서 온라인으로 관리할 수 있는 원격 저장소

-Git add, commit, push, pull 등의 명령어 이해 및 활용
    -add와 commit의 차이점?
    add는 변화를 기록하기 위한 준비단계에 해당한다. 파일을 add 하는 것은 staging 한다는
    표현을 쓰고,  본격적인 스냅샷을 찍기 전에 임시로 올려두는 개념이다.
    commit은 실제로 특정 순간의 버전을 스냅샷으로 확정시켜 남겨두는 역할을 한다.
        *여기서 잠깐, 스냅샷?
        Snapshot이란 마치 사진을 찍듯이 특정 시점에 스토리지의 파일 시스템을 포착해 보관하는
        기술을 의미한다. (장애 발생 시 스냅샷 생성 시점으로 데이터를 복구할 수도 있다!)

-Github 활용 소스코드 버전관리
    -branch
    여러 개발자들이 동시에 다양한 작업을 할 수 있게 만들어주는 기능.

    -Git 에 branch 생성
    git branch test_branch
    git checkout test_branch
    -GitHub 에 추가
    git push origin test_branch

-Jupyter Notebook 활용 문서/코드 작업
cmd -> jupyter notebook -> jupyter 폴더에 ipynb 있다!

    -단축키!
    esc + x : 셀 삭제
    esc + z : 셀 삭제 취소
    esc + a : 위에 셀 추가
    esc + b : 아래에 셀 추가
    esc + y : 코드로 변환
    esc + m : md로 변환

**생활코딩 git 공부할 것!!  (https://learngitbranching.js.org/?locale=ko)
