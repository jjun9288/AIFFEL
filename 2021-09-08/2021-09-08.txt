ls --a : all
-l : 자세한 정보 / -t : 수정시간 순 정렬 / -r: 역순으로 출력 / -rt: 최신파일을 맨 아래로

-OS / Kernel / Shell
applications <-> kernel <-> CPU/Memory/Devices
운영체제=커널이라고 할 수는 없지만 커널은 아주 중요한 역할들을 수행하는 핵심 구성요소이다
운영체제 내부는 알맹이인 kernel, 껍데기인 shell로 이루어져 있다고 할 수 있다.
Kernel은 시스템의 모든 작업을 제어하는 OS의 핵심이고,
Shell은 사용자가 커널과 통신할 수 있는 인터페이스이다!

-Process / Thread
프로그램이 수행될 때 OS는 이를 process라는 단위로 관리한다. 즉, OS는 프로세스 단위로
메모리와 CPU 연산 등 컴퓨팅 자원을 분배한다.
Thread는 process가 할당받은 메모리를 활용는 실행단위이다.

-Clock : CPU의 성능을 판단하는 주요 척도

-CPU & GPU
쉽게 생각해 CPU는 박사학위 소유자 8명, GPU는 초등학생 3000명이다. 복잡한 수식 처리는 
박사가 유리하지만, 단순 연산은 초등학생 3000이 유리하겠지요

-저장장치
주 저장장치는 RAM, 보조 저장장치는 HDD, SSD

-클라우드 컴퓨팅 (AMAZON!!)


-가상화
하나의 컴퓨터를 쪼개어 여러 대의 컴퓨터가 있는 것처럼 사용하게 하는 기술.
가상화에서 실제 물리적인 서버를 host, 그 안에서 돌아가는 가상 서버를 guest 라고 한다.
가상머신 가상화 / 컨테이너 가상화
컨테이너 가상화를 손쉽게 제공하는 프로그램은 Docker 이다.
    -Docker : 한 곳에서 실행 환경(우분투, 버전, 라이브러리,등)을 컨테이너로 구성해놓은 다음
                그걸 그대로 클라우드로 가져가 실행하거나, 내 컴퓨터 내 여러 개의 독립된 작업
                환경을 구분하는 데에 사용할 수 있다.

-Shell 명령어 응용
  history: 셸 명령어 이력을 출력합니다.
  man: 프로그램의 매뉴얼 페이지를 출력합니다.
  which: 명령어의 전체 경로를 출력합니다.
  export: 셸 변수나 함수를 현재 환경으로 내보냅니다.
  env: 명령어가 제공된다면 해당 명령어를 새로운 환경에서 실행합니다. 명령어가 제공되지 않은 경우 현재 환경의 정보를 출력합니다.
 -텍스트 처리
  echo: 뒤이어 입력한 내용을 출력합니다.
  cat: 하나 이상의 텍스트 파일을 순서대로 출력합니다.
  sort: 입력된 텍스트를 줄 단위로 정렬합니다.
  less: 텍스트 파일의 내용을 자유롭게 조회하고 검색합니다.
  head: 텍스트 파일의 앞 몇 줄만 출력합니다.
  tail: 텍스트 파일의 마지막 몇 줄만 출력합니다.
  cut: 텍스트를 구분자(delimiter)에 따라 나눕니다.
  uniq: 텍스트 중 중복 값들을 제거합니다.
  grep: 정규식을 활용해 텍스트를 검색합니다.
  wc: 텍스트를 단어, 줄, 문자 등 단위로 셉니다.
  comm: 텍스트 파일을 비교합니다.
  zcat: 압축된 텍스트 파일을 출력합니다.
  sed: 정규식을 활용해 텍스트를 변형합니다.
  awk: 텍스트를 스캔하고 변형합니다.
 -파일 제어 및 이동
  ls: 현재 디렉토리 내의 파일 및 폴더들을 출력합니다.
  cd: Change Directory의 약자로, 뒤에 따라오는 폴더로 내가 있는 셸의 현재 위치를 이동시킵니다.
  cp: 파일을 복사합니다.
  mv: 파일을 이동합니다.
  rm: 파일을 삭제합니다. 폴더를 삭제하기 위해서는 -r (recursive) 옵션을, 빈 폴더가 아니더라도 내부까지 삭제하려면 -f (force) 옵션을 함께 사용해야 합니다.
  chown: 대상 파일의 소유 사용자와 그룹을 변경합니다.
  chmod: 대상 파일의 권한을 변경합니다.
  find: 파일을 찾습니다.
  pwd: Present Working Directory의 약자입니다. 현재 내가 >위치한 디렉토리 위치를 출력합니다.
  ln: 파일에 대한 링크를 생성합니다.
  touch: 파일 접근 및 수정 시간을 변경합니다. 빈 파일을 만드는데도 사용할 수 있습니다.
  tar: 파일 및 폴더를 하나의 아카이브 파일로 통합하고 압축합니다. 
  mount: 새로운 저장장치를 파일시스템으로서 추가합니다.
  rename: 여러 파일들의 이름을 규칙에 따라 한번에 변경합니다.
  df: 파일시스템의 남은 용량을 표시합니다.
 시스템 및 프로세스 제어
  sudo: 이어지는 명령을 최고 관리자 권한으로 실행합니다.
  apt-get: APT 패키지 관리자를 통해 공인 저장소에서 패 >키지를 가져다 설치하거나 제거합니다.
  ps: 현재 프로세스 목록을 출력합니다.
  kill: PID에 해당하는 프로세스에 시그널을 보냅니다.
  fg: 배경에서 실행되는 작업을 전경(foreground)으로 가져옵니다.
  bg: 작업을 배경(backgound)으로 보냅니다.
  jobs: 전경 및 배경 작업의 목록을 표시합니다.
 -기타
  ssh: 원격으로 셸에 접속합니다.
  tmux: 여러 개의 셸 세션을 관리하고, 터미널 접속이 끊어지더라도 셸 세션을 유지합니다.
  watch: 이어지는 명령을 주기적으로 실행하여 표시합니다.
  curl: 주어진 URL과 통신합니다.
  wget: 네트워크를 통해 파일을 다운로드합니다.
  scp: SSH를 통해 원격으로 파일을 전송합니다.
  ssh-keygen: SSH 공개키 비밀키 쌍을 생성합니다.
  ssh-copy: SSH 공개키를 해당 서버에 등록합니다.
  rsync: 원격으로 파일을 동기화합니다.
  xarg: 명령어를 구성하여 실행합니다. 이전 명령에서 인자를 넘겨받아 실행하거나, 다중 프로세스를 사용하여 명령을 병렬로 실행하는 등의 작업이 가능합니다.
  cron: 주기적으로 실행될 명령을 등록합니다.
  htop: 프로세스 목록 및 자원 사용량을 시각적으로 표시합니다.

 Using titanic.csv from kaggle
 -count the number of male and female
  tail -n +2 titanic.csv | cut -d"," -f6 | sort | uniq -c
-count people whose first name is Brown
  cat titanic.csv | grep Brown, | wc -l